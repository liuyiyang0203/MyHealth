# Generated by Django 2.1.5 on 2019-03-08 06:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MhUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usertype', models.CharField(choices=[('normal', '普通用户'), ('doctor', '医生')], default='normal', max_length=10, verbose_name='用户类型')),
                ('deviceid', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('mypassword', models.CharField(default='', max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HeartData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('b_value', models.IntegerField(default=0, verbose_name='B')),
                ('q_value', models.IntegerField(default=0, verbose_name='Q')),
                ('s_value', models.IntegerField(default=0, verbose_name='S')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charged', models.CharField(choices=[('pressure', '血压数据'), ('oxygen', '血氧数据'), ('heartbeat', '心跳数据'), ('tem', '体温数据')], default='heartbeat', max_length=20, verbose_name='医生负责的部分')),
            ],
        ),
        migrations.CreateModel(
            name='OxygenData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('hr_value', models.IntegerField(default=0, verbose_name='HR')),
                ('spo2', models.IntegerField(default=0, verbose_name='SPO2数据')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='PressureData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('s_value', models.FloatField(default=0, verbose_name='S')),
                ('bpss_value', models.IntegerField(default=0, verbose_name='BPSS')),
                ('bpsz_value', models.IntegerField(default=0, verbose_name='BPSZ')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='TemData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('tem_value', models.FloatField(default=0.0, verbose_name='具体数值')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='DoctorUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.IntegerField(blank=True, default=0, null=True, verbose_name='年龄')),
                ('gender', models.CharField(blank=True, choices=[('man', '男'), ('woman', '女')], default='man', max_length=10, null=True, verbose_name='性别')),
                ('signature', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='个性签名')),
                ('expert', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='擅长')),
                ('avatar', imagekit.models.fields.ProcessedImageField(default='avatars/wallls.com_119414.jpg', upload_to='avatars')),
            ],
        ),
        migrations.CreateModel(
            name='NormalUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.IntegerField(blank=True, default=0, null=True, verbose_name='年龄')),
                ('gender', models.CharField(blank=True, choices=[('man', '男'), ('woman', '女')], default='man', max_length=10, null=True, verbose_name='性别')),
                ('weight', models.FloatField(blank=True, default=0, null=True, verbose_name='体重')),
                ('marry', models.BooleanField(blank=True, default=False, null=True, verbose_name='已婚')),
                ('career', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='职业')),
                ('signature', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='个性签名')),
                ('medicalhistory', models.TextField(blank=True, default='', max_length=1000, null=True, verbose_name='用药史')),
                ('avatar', imagekit.models.fields.ProcessedImageField(default='avatars/wallls.com_119414.jpg', upload_to='avatars')),
            ],
        ),
        migrations.AddField(
            model_name='mhuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='mhuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='temdata',
            name='own',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='mhuser.NormalUser', verbose_name='条目所有者'),
        ),
        migrations.AddField(
            model_name='pressuredata',
            name='own',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='mhuser.NormalUser', verbose_name='条目所有者'),
        ),
        migrations.AddField(
            model_name='oxygendata',
            name='own',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='mhuser.NormalUser', verbose_name='条目所有者'),
        ),
        migrations.AddField(
            model_name='match',
            name='doctor',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='mhuser.DoctorUser', verbose_name='医生'),
        ),
        migrations.AddField(
            model_name='match',
            name='normaluser',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='mhuser.NormalUser', verbose_name='普通用户'),
        ),
        migrations.AddField(
            model_name='heartdata',
            name='own',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='mhuser.NormalUser', verbose_name='条目所有者'),
        ),
    ]
